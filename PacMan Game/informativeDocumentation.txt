מחלקת Display:
המחלקה אחראית על כל התצוגה של המשחק. מסך פתיחה, ציור המבוך, הנקודות, הפירות, כל כיווני פאקמן, רוח רפאים ומסך הסיום.
startScreen- מסך פתיחה עם הוראות קומיות לשחקן להתנהלות המשחק. לולאת הwhile נוצרה כדי שהמשתמש יתחיל את המשחק כאשר הוא מוכן.
endScreen- מסך סיום במקרה של ניצחון, מציג כל אות בדרמטיות.
drawMaze- ציור המבוך. תכננו את המבוך ידנית, תוך כדי חשיבה על פשטות ונוחות למשתמש בהתחשב במהירות זמן הריצה ובכך שפאקמן לא עובר במעבר אם הכניסה אליו לא מדוייקת, לכן תכננו את המבוך כך שיהיו מעברים נוחים שנעזרים בעצירה מול הקירות.
isPixelBlack- פונקציית עזר שבנינו כדי להבדיל בין מעברים לבין קירות. פונקציה זו משמשת עבורנו גם במחלקות נוספות.
drawPellets- מצייר נקודות בחלק האמצעי של המסך על מנת להוסיף עיצוב דומה למשחק המקור.
ציור הדמויות והפירות נעשה באמצעות BitMapEditor.

מחלקת Ghost:
המחלקה אחראית על כל הפעולות שקשורות להתנהלות הרוחות במבוך. 
אובייקט שמייצג את הדמויות שמטרתן להכשיל את פקמן.
השדות שהגדרנו הם row, col שמייצגים את הפינה השמאלית העליונה של הדמות (כאשר הדמות היא 16X16), באמצעותם אנחנו שולטים על מיקום הדמות ומקבלים אינדיקציה בשביל השוואות למיקומים אחרים. בנוסף קיים שדה direction שבו שמרנו את כיוון התנועה הנוכחי של הדמות.
במחלקה פונקציות סטנדרטיות של constructor, get.
move- פונקציה שמעדכנת את המיקום הבא של הדמות לפי כיוון ההתקדמות שנקבע בפונקציה setDirection.
setDirection- פונקציה זו אחראית על כיוון ההתקדמות של הדמות. ברוחות הרפאים קבענו באופן ידני שהרוחות יזוזו בצורה מעגלית. הפונקציה נקראת ברגע שבו אנחנו מזהים שהגוסט יתנגשו בקיר.
isPixelBlack- אותה פונקציה כמו בDisplay. עוזרת בבדיקת התנגשות בקירות על מנת לשנות כיוון. לפי לוגיקת המשחק שלנו קיר מבוך יהיה פיקסל שחור. לכן תבצעת תנועה רק כאשר isPixelBlack = false.
isCollisionPacMan- הפונקציה מקבלת אובייקט פאקמן, ובודקת עבור האובייקט הנוכחי של הרוח האם התנגש עם פאקמן. הבדיקה נעשית לפי מיקום של עמודה ושורה, כאשר קבענו שהמיקום של כל דמות יהיה לפי הפינה השמאלית למעלה. הבדיקה נעשית על ידי השוואה של הצלע הרלוונטית של פאקמן מקצה לקצה בהתאם לכיוון התקדמות הרוח (כלומר אם הרוח נעה שמאלה, נבדוק אם הצלע הימנית של פאקמן צמודה לגוסט). בדיקה זו נעשית באמצעות המיקומים של הדמויות, שהם שדות מוגדרים בתוך האובייקטים. 
willCollideWithWall - מטרת הפונקציה לבדוק האם הצעד הבא של הגוסט אפשרי בהתאם לכיוון תנועתו. פונקציה זו עוזרת בלולאת המשחק על מנת להבין אם להזיז את הגוסט צעד אחד נוסף בכיוון תנועתו או שיש צורך לשנות את כיוונו. הבדיקה נעשית לפי מיקום של עמודה ושורה, כאשר קבענו שהמיקום של כל דמות יהיה לפי הפינה השמאלית למעלה. הבדיקה נעשית על ידי השוואה של הצלע הרלוונטית של הגוסט מקצה לקצה בהתאם לכיוון התקדמותו, ובודקת האם בכיוון התנועה שלו קיים חלק כלשהו בצלע שלו שיתנגש בפיקסל שחור - כלומר במבוך. אציין שלפי לוגיקת המשחק שלנו בפינה שמאלית עליונה דמות יהיה פיקסל לבן, ולכן בדיקה זו מבטיחה  שפיקסל שחור יכול להיות אך ורק חלק מקירות המבוך.

מחלקת PacMan
המחלקה אחראית על כל הפעולות שקשורות להתנהלות הפאקמן במבוך. 
האובייקט מייצג את דמות הפאקמן.
השדות שהגדרנו הם row, col שמייצגים את הפינה השמאלית העליונה של הדמות (כאשר הדמות היא 16X16), באמצעותם אנחנו שולטים על מיקום הדמות ומקבלים אינדיקציה בשביל השוואות למיקומים אחרים. בנוסף קיים שדה direction שבו שמרנו את כיוון התנועה הנוכחי של הדמות.
במחלקה פונקציות סטנדרטיות של constructor, get.
move- פונקציה שמעדכנת את המיקום הבא של הדמות לפי כיוון ההתקדמות שנקבע בפונקציה setDirection. (בדיוק כמו במחלקה ghost)
setDirection- פונקציה זו אחראית על כיוון ההתקדמות של הדמות. הכיוון ייקבע לפי לחיצת המשתמש על כפתורי החיצים במקלדת. בכל ריצה של לולאת המשחק, מתבצעת בדיקה האם המשתמש לחץ על כפתור חץ כלשהו, ואם כן כיוון התנועה של הפאקמן משתנה בהתאם.
isPixelBlack- אותה פונקציה כמו בDisplay. עוזרת בבדיקת התנגשות בקירות על מנת לשנות כיוון. לפי לוגיקת המשחק שלנו קיר מבוך יהיה פיקסל שחור. לכן תבצעת תנועה רק כאשר isPixelBlack = false.
(בדיוק כמו במחלקה ghost)
willCollideWithWall - מטרת הפונקציה לבדוק האם הצעד הבא של הגוסט אפשרי בהתאם לכיוון תנועתו. פונקציה זו עוזרת בלולאת המשחק על מנת להבין אם להזיז את הגוסט צעד אחד נוסף בכיוון תנועתו או שיש צורך לשנות את כיוונו.  הבדיקה נעשית לפי מיקום של עמודה ושורה, כאשר קבענו שהמיקום של כל דמות יהיה לפי הפינה השמאלית למעלה. הבדיקה נעשית על ידי השוואה של הצלע הרלוונטית של פאקמן מקצה לקצה בהתאם לכיוון התקדמותו, ובודקת האם בכיוון התנועה שלו קיים חלק כלשהו בצלע שלו שיתנגש בפיקסל שחור - כלומר במבוך. (בדיוק כמו במחלקה ghost)
isCollisionApple, isCollisionCherries, isCollisionStrawBerry - הפעולות מבצעות השוואה בין מיקום הפאקמן לבין מיקום הפירות שמיקמנו במפה, כדי לבדוק האם הפאקמן הגיע למיקום של הפירות ו"אכל" אותם. במשחק אנו מבצעים מעקב אחר 3 פירות באמצעות אינדיקטורים שמוגדרים במחלקת המשחק ובכל לולאה של ריצת המשחק נבדק האם מיקום הפאקמן שווה לאחד ממיקומי הפירות באמצעות מתודות אלו.

מחלקת PacManGame
שדות:
אובייקט פאקמן שמייצג את דמות הפאקמן
3 אובייקטים שונים של רוחות שמייצגים את דמויות הרוחות
משתנה בוליאני GameOver - אינדיקטור לסיום המשחק על ידי פסילת המשתמש, נבדק באמצעות בדיקה על כל אחד מאובייקטים של הגוסט האם התקיימה המתודה isCollisionPacMan 
משתנים בוליאניים ateApple, ateCherris, ateStrawBerry - אינדיקטורים שכל אחד מהם מציין האם הפאקמן "אכל" את הפרי לפי מיקום. נבדקים בכל ריצה של המשחק לפי המתודה isCollisionApple, isCollisionCherries, isCollisionStrawBerry
משתנה בוליאני hasWon - אינדיקטור לסיום המשחק על ידי ניצחון של המשתמש שקורה כאשר הפאקמן מסיים " לאכול" את שלושת הפירות. 
מתודה PacManGameRun
המתודה היא לולאה שמריצה את המשחק.
תנאי העצירה שלה הם האינדיקטורים שמייצגים את התנאים לסיום המשחק, כלומר הלולאה תיעצר כאשר קרה אחד משני הדברים הבאים: 1. המשתמש הפסיד כי אחד הגוסטים התנגש בפאקמן
                                                                                                                                                                                                                    2. המשתמש מנצח כי הפאקמן אכל את 3 הפירות
בתחילת כל לולאה מתבצעת המתודה pacman.setdirection על מנת לבדוק האם נכנס קלט חדש מהמשתמש. לאחר מכן אנו מוחקים את דמות הפאקמן הקודמת על מנת לצייר דמות חדשה במיקומה החדש לאחר הפעלת המתודה pacman.move. אציין שמתבצעת בדיקה האם קיימת אפשרות לפאקמן לזוז באמצעות המתודה willcollidewithwall 
                                                                                                                                                   
                                                                                                                                                                                                  